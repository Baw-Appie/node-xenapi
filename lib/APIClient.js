// Generated by CoffeeScript 1.8.0
(function() {
  var Promise, debug,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  debug = require('debug')('APIClient');

  Promise = require('bluebird');

  module.exports = (function() {
    function exports(xmlrpc, options) {
      this.options = options;
      this.request = __bind(this.request, this);
      debug("constructor()");
      if (!xmlrpc) {
        throw Error("Must provide xmlrpc");
      }
      if (!this.options) {
        throw Error("Must provide options");
      }
      if (!this.options.host) {
        throw Error("Must provide `host` in options");
      }
      if (!this.options.port) {
        throw Error("Must provide `port` in options");
      }
      this.client = xmlrpc.createClient(this.options);
    }

    exports.prototype.request = function(method, args) {
      debug("request(" + method + ", " + args + ")");
      return new Promise((function(_this) {
        return function(resolve, reject) {
          return _this.client.methodCall(method, args, function(error, value) {
            if (error) {
              return reject(error);
            } else {
              return resolve(value.Value);
            }
          });
        };
      })(this));
    };

    return exports;

  })();

}).call(this);
