// Generated by CoffeeScript 1.9.1
(function() {
  var Network, Promise, debug,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  debug = require('debug')('XenAPI:Network');

  Promise = require('bluebird');

  Network = (function() {
    var key, network, session;

    key = void 0;

    session = void 0;

    network = void 0;


    /**
    	* Construct VM
    	* @class
    	* @param      {Object}   session - An instance of Session
    	* @param      {Object}   network - A JSON object representing this Network
    	* @param      {String}   key - The OpaqueRef handle to this Network
     */

    function Network(_session, _network, _key) {
      this.getOpaqueRef = bind(this.getOpaqueRef, this);
      debug("constructor()");
      if (!_session) {
        throw Error("Must provide `session`");
      } else {
        session = _session;
      }
      if (!_network) {
        throw Error("Must provide `network`");
      }
      network = _network;
      if (!_key) {
        throw Error("Must provide `key`");
      } else {
        key = _key;
      }
      this.uuid = network.uuid;
      this.name = network.name_label;
      this.VIFs = network.VIFs;
      this.PIFs = network.PIFs;
      this.MTU = network.MTU;
    }

    Network.prototype.getOpaqueRef = function() {
      return key;
    };

    return Network;

  })();

  module.exports = Network;

}).call(this);
