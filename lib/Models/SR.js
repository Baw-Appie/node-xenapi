// Generated by CoffeeScript 1.9.1
(function() {
  var Promise, SR, debug,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  debug = require('debug')('XenAPI:SR');

  Promise = require('bluebird');

  SR = (function() {
    var key, session, sr;

    key = void 0;

    session = void 0;

    sr = void 0;


    /**
    * Construct SR
    * @class
    * @param      {Object}   session - An instance of Session
    * @param      {Object}   sr - A JSON object representing this SR
    * @param      {String}   key - The OpaqueRef handle to this SR
     */

    function SR(_session, _sr, _key) {
      this.getOpaqueRef = bind(this.getOpaqueRef, this);
      debug("constructor()");
      debug(_sr);
      if (!_session) {
        throw Error("Must provide `session`");
      }
      if (!_sr) {
        throw Error("Must provide `sr`");
      }
      if (!_key) {
        throw Error("Must provide `key`");
      }
      session = _session;
      sr = _sr;
      key = _key;
      this.uuid = sr.uuid;
      this.name = sr.name_label;
      this.description = sr.name_description;
      this.allowed_operations = sr.allowed_operations;
      this.current_operations = sr.current_operations;
      this.VDIs = sr.VDIs;
      this.PBDs = sr.PBDs;
      this.physical_utilisation = sr.physical_utilisation;
      this.physical_size = sr.physical_size;
      this.unused_space = sr.physical_size - sr.physical_utilisation;
    }


    /**
    * Return the OpaqueRef that represents this VM
    * @return     {String}
     */

    SR.prototype.getOpaqueRef = function() {
      return key;
    };

    return SR;

  })();

  module.exports = SR;

}).call(this);
