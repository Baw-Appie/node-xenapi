// Generated by CoffeeScript 1.8.0
(function() {
  var Promise, debug,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  debug = require('debug')('XenAPI:Session');

  Promise = require('bluebird');

  module.exports = (function() {
    function exports(apiClient) {
      this.apiClient = apiClient;
      this.request = __bind(this.request, this);
      this.logout = __bind(this.logout, this);
      this.login = __bind(this.login, this);
      debug("constructor()");
      if (!this.apiClient) {
        throw Error("Must provide apiClient");
      }
      this.loggedIn = false;
    }

    exports.prototype.login = function(username, password) {
      debug("login()");
      return new Promise((function(_this) {
        return function(resolve, reject) {
          if (!_this.loggedIn) {
            return _this.apiClient.request("session.login_with_password", [username, password]).then(function(value) {
              debug("login Completed");
              _this.loggedIn = true;
              _this.sessionID = value;
              return resolve();
            })["catch"](function() {
              debug("login Failed");
              return reject();
            });
          } else {
            debug("already logged in");
            return reject();
          }
        };
      })(this));
    };

    exports.prototype.logout = function() {
      debug("logout()");
      return new Promise((function(_this) {
        return function(resolve, reject) {
          if (!_this.loggedIn) {
            debug("not currently logged in");
            return reject();
          } else {
            return _this.apiClient.request("session.logout", [_this.sessionID]).then(function(value) {
              debug("logout Completed");
              _this.loggedIn = false;
              return resolve();
            })["catch"](function() {
              debug("logout Failed");
              return reject();
            });
          }
        };
      })(this));
    };

    exports.prototype.request = function(method, args) {
      debug("request()");
      if (!this.loggedIn) {
        debug("not logged in");
        throw Error("Must be logged in to make API requests.");
      }
      if (!args) {
        args = [];
      }
      return new Promise((function(_this) {
        return function(resolve, reject) {
          args.unshift(_this.sessionID);
          return _this.apiClient.request(method, args).then(function(value) {
            return resolve(value);
          })["catch"](function(e) {
            return reject(e);
          });
        };
      })(this));
    };

    return exports;

  })();

}).call(this);
