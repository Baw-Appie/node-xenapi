// Generated by CoffeeScript 1.9.1
(function() {
  var Promise, VIF, debug,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  debug = require('debug')('XenAPI:VIF');

  Promise = require('bluebird');

  VIF = (function() {
    var key, session, vif;

    key = void 0;

    session = void 0;

    vif = void 0;


    /**
    	* Construct VIF
    	* @class
    	* @param      {Object}   session - An instance of Session
    	* @param      {Object}   vif - A JSON object representing this VIF
    	* @param      {String}   key - The OpaqueRef handle to this VIF
     */

    function VIF(_session, _vif, _key) {
      this.push = bind(this.push, this);
      this.toJSON = bind(this.toJSON, this);
      debug("constructor()");
      if (!_session) {
        throw Error("Must provide `session`");
      } else {
        session = _session;
      }
      if (!_vif) {
        throw Error("Must provide `vif`");
      }
      vif = _vif;
      if (!_key) {
        throw Error("Must provide `key`");
      } else {
        key = _key;
      }
      this.ALLOWED_OPERATIONS = {
        ATTACH: "attach",
        UNPLUG: "unplug"
      };
      this.MAC = vif.MAC;
      this.MTU = vif.MTU;
      this.device = vif.device;
      this.network = vif.network;
      this.vm = vif.VM;
      this.uuid = vif.uuid;
      this.attached = vif.currently_attached;
    }

    VIF.prototype.toJSON = function() {
      return {
        MAC: this.MAC,
        MTU: this.MTU,
        device: this.device,
        VM: this.vm,
        network: this.network,
        other_config: {},
        qos_algorithm_type: "",
        qos_algorithm_params: {}
      };
    };

    VIF.prototype.push = function() {
      return new Promise((function(_this) {
        return function(resolve, reject) {
          return session.request("VIF.create", [_this.toJSON()]).then(function(value) {
            debug(value);
            return resolve();
          })["catch"](function(e) {
            debug(e);
            return reject(e);
          });
        };
      })(this));
    };

    return VIF;

  })();

  module.exports = VIF;

}).call(this);
