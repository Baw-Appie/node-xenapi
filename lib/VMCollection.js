// Generated by CoffeeScript 1.8.0
(function() {
  var Promise, debug, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  debug = require('debug')('XenAPI:VMCollection');

  Promise = require('bluebird');

  _ = require('lodash');

  module.exports = (function() {
    var VM;

    VM = void 0;

    function exports(session, _VM) {
      this.session = session;
      this.list = __bind(this.list, this);
      debug("constructor()");
      if (!this.session) {
        throw Error("Must provide session");
      }
      if (!_VM) {
        throw Error("Must provide VM");
      } else {
        VM = _VM;
      }
    }

    exports.prototype.list = function() {
      debug("list()");
      return new Promise((function(_this) {
        return function(resolve, reject) {
          return _this.session.request("VM.get_all_records").then(function(value) {
            var validateVM;
            validateVM = function(vm) {
              return !vm.is_a_template && !vm.is_control_domain;
            };
            return resolve(_.filter(value, validateVM));
          })["catch"](function(e) {
            debug(e);
            return reject(e);
          });
        };
      })(this));
    };

    return exports;

  })();

}).call(this);
