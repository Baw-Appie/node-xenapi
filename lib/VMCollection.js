// Generated by CoffeeScript 1.8.0
(function() {
  var Promise, debug, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  debug = require('debug')('XenAPI:VMCollection');

  Promise = require('bluebird');

  _ = require('lodash');

  module.exports = (function() {
    var VM, session;

    session = void 0;

    VM = void 0;

    function exports(_session, _VM) {
      this.list = __bind(this.list, this);
      debug("constructor()");
      if (!_session) {
        throw Error("Must provide session");
      } else {
        session = _session;
      }
      if (!_VM) {
        throw Error("Must provide VM");
      } else {
        VM = _VM;
      }
    }

    exports.prototype.list = function() {
      debug("list()");
      return new Promise((function(_this) {
        return function(resolve, reject) {
          return session.request("VM.get_all_records").then(function(value) {
            var VMs, createVMInstance;
            if (!value) {
              reject();
            }
            debug("Received " + (Object.keys(value).length) + " records");
            createVMInstance = function(vm, key) {
              if (!vm.is_a_template && !vm.is_control_domain) {
                return new VM(session, vm, key);
              }
            };
            VMs = _.map(value, createVMInstance);
            return resolve(_.filter(VMs, function(vm) {
              return vm;
            }));
          })["catch"](function(e) {
            debug(e);
            return reject(e);
          });
        };
      })(this));
    };

    return exports;

  })();

}).call(this);
