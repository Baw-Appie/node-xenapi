// Generated by CoffeeScript 1.8.0
(function() {
  var chai, chaiAsPromised, expect, sinon, sinonChai;

  chai = require('chai');

  chaiAsPromised = require('chai-as-promised');

  expect = chai.expect;

  sinon = require('sinon');

  sinonChai = require('sinon-chai');

  chai.use(sinonChai);

  chai.use(chaiAsPromised);

  describe("Session", function() {
    var Session;
    Session = require('../../lib/Models/Session');
    describe("constructor", function() {
      return it("should throw unless apiClient is provided", function() {
        return expect(function() {
          return new Session();
        }).to["throw"](/Must provide apiClient/);
      });
    });
    return describe("logout", function() {
      var session;
      session = void 0;
      beforeEach(function() {
        return session = new Session({});
      });
      return it("should reject if not currently logged in", function(done) {
        var promise;
        promise = session.logout();
        return expect(promise).to.eventually.be.rejected.and.notify(done);
      });
    });
  });

}).call(this);
